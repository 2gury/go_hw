// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/user/repository.go

// Package mock_user is a generated GoMock package.
package mock_user

import (
	models "lectures-2022-1/06_databases/99_hw/redditclone/internal/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserPgRepository is a mock of UserPgRepository interface.
type MockUserPgRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUserPgRepositoryMockRecorder
}

// MockUserPgRepositoryMockRecorder is the mock recorder for MockUserPgRepository.
type MockUserPgRepositoryMockRecorder struct {
	mock *MockUserPgRepository
}

// NewMockUserPgRepository creates a new mock instance.
func NewMockUserPgRepository(ctrl *gomock.Controller) *MockUserPgRepository {
	mock := &MockUserPgRepository{ctrl: ctrl}
	mock.recorder = &MockUserPgRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserPgRepository) EXPECT() *MockUserPgRepositoryMockRecorder {
	return m.recorder
}

// Insert mocks base method.
func (m *MockUserPgRepository) Insert(usr *models.User) (uint64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Insert", usr)
	ret0, _ := ret[0].(uint64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Insert indicates an expected call of Insert.
func (mr *MockUserPgRepositoryMockRecorder) Insert(usr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Insert", reflect.TypeOf((*MockUserPgRepository)(nil).Insert), usr)
}

// SelectByUsername mocks base method.
func (m *MockUserPgRepository) SelectByUsername(username string) (*models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectByUsername", username)
	ret0, _ := ret[0].(*models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectByUsername indicates an expected call of SelectByUsername.
func (mr *MockUserPgRepositoryMockRecorder) SelectByUsername(username interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectByUsername", reflect.TypeOf((*MockUserPgRepository)(nil).SelectByUsername), username)
}
