// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/user/repository.go

// Package mock_user is a generated GoMock package.
package mock_user

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "gitlab.com/mailru-go/lectures-2022-1/03/99_hw/coverage/internal/models"
)

// MockUserRepository is a mock of UserRepository interface.
type MockUserRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUserRepositoryMockRecorder
}

// MockUserRepositoryMockRecorder is the mock recorder for MockUserRepository.
type MockUserRepositoryMockRecorder struct {
	mock *MockUserRepository
}

// NewMockUserRepository creates a new mock instance.
func NewMockUserRepository(ctrl *gomock.Controller) *MockUserRepository {
	mock := &MockUserRepository{ctrl: ctrl}
	mock.recorder = &MockUserRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserRepository) EXPECT() *MockUserRepositoryMockRecorder {
	return m.recorder
}

// SelectUsers mocks base method.
func (m *MockUserRepository) SelectUsers() (*models.SearchUsers, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectUsers")
	ret0, _ := ret[0].(*models.SearchUsers)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectUsers indicates an expected call of SelectUsers.
func (mr *MockUserRepositoryMockRecorder) SelectUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectUsers", reflect.TypeOf((*MockUserRepository)(nil).SelectUsers))
}
