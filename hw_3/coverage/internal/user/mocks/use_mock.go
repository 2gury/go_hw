// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/user/usecase.go

// Package mock_user is a generated GoMock package.
package mock_user

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "gitlab.com/mailru-go/lectures-2022-1/03/99_hw/coverage/internal/models"
	tools "gitlab.com/mailru-go/lectures-2022-1/03/99_hw/coverage/tools"
)

// MockUserUsecase is a mock of UserUsecase interface.
type MockUserUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockUserUsecaseMockRecorder
}

// MockUserUsecaseMockRecorder is the mock recorder for MockUserUsecase.
type MockUserUsecaseMockRecorder struct {
	mock *MockUserUsecase
}

// NewMockUserUsecase creates a new mock instance.
func NewMockUserUsecase(ctrl *gomock.Controller) *MockUserUsecase {
	mock := &MockUserUsecase{ctrl: ctrl}
	mock.recorder = &MockUserUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserUsecase) EXPECT() *MockUserUsecaseMockRecorder {
	return m.recorder
}

// GetUsers mocks base method.
func (m *MockUserUsecase) GetUsers() ([]models.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUsers")
	ret0, _ := ret[0].([]models.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUsers indicates an expected call of GetUsers.
func (mr *MockUserUsecaseMockRecorder) GetUsers() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUsers", reflect.TypeOf((*MockUserUsecase)(nil).GetUsers))
}

// SortUsers mocks base method.
func (m *MockUserUsecase) SortUsers(arg0 []models.User, arg1 *tools.QueryParams) []models.User {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SortUsers", arg0, arg1)
	ret0, _ := ret[0].([]models.User)
	return ret0
}

// SortUsers indicates an expected call of SortUsers.
func (mr *MockUserUsecaseMockRecorder) SortUsers(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SortUsers", reflect.TypeOf((*MockUserUsecase)(nil).SortUsers), arg0, arg1)
}
